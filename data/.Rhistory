# 1) 세션(session) : 현재 수행되는 R실행 환경
sessionInfo()
sessionInfo()
sessionInfo()
r <- rnorm(1000)
print(r)
hist(r)
mean(r) # 평균
sd(r) # 표준편차
pdf("C:/hist.pdf") # open
pdf("hist.pdf") # open
hist(r)
dev.off() # close
pdf("hist.pdf") # open
hist(r)
dev.off() # close
# 1) 설치 가능한 패키지 확인
dim(available.packages())
# 2) 패키지 설치 : 기본 패키지 30개 이미 설치
#install.packages('패키지명')
install.packages('stringr')
# 3) 설치된 패키지 검색
rownames(installed.packages())
# 4) 패키지 설치 경로
.libPaths()
# 5) 패키지 사용
library(패키지명)
# 5) 패키지 사용
# library(패키지명)# 메모리로 올림 (인메모리)
library(stringr)
library(help='stringr') # 패키지 정보 제공
string <- '홍길동35유관순25'
str_extract_all(string, '[0-9]{2}') # '35','25'
str_extract_all(string, '[가-힣]{3}') # '홍길동','유관순'
kor <- 90
mat <- 80
tot = kor + mat
tot # print(tot)
# 단일 객체 vs 복수 객체
name <- "홍길동"
age <- 35
# 복수 객체
names <- c("홍길동", "이순신", "유관순")
ages <- c(35, 45, 25)
score <-c(70,70, NA, 40)
is.na(score)
# 1) 문자형 -> 숫자형
x <- c(10, 20, 30, '40')
mode(x) # "character"
sum(x) # error
mode(gender)
# 범주형 변수
gender <- c("M","F","F","M","M")
mode(gender)
# (1) 요인형 변환
fgender <- as.factor(gender)
fgender
# (2) levels 변경 : base 으로 변경
fgender <- factor(x=fgender, levels = c('M', 'F'))
fgender
# (3) 요인형 변환시 주의사항
num <- c(4, 2, 4, 2)
# 숫자형 -> 요인형
fnum <- as.factor(num)
fnum
#[1] M F F M M
#Levels: M F
mode(fgender)
# 3) 날짜형 변환
Sys.Date() # "2021-04-23"
Sys.time() # "2021-04-23 17:07:15 KST"
# 3) 날짜형 변환
Sys.Date() # "2021-04-23"
mode(today) # "character"
today <- "2021-04-23 17:07:15"
mode(today) # "character"
print(today)
print(today)
today <- "2024-05-02 12:42:01 KST"
mode(today) # "character"
ctoday <- as.Date(today, "%Y-%m-%d %H:%M:%S")
ctoday
# 날짜변환
ctoday <- as.Date(today, '%Y-%m-%d %H:%M:%S')
mode(ctoday) # "numeric"
class(ctoday) # "Date"
ctoday # "2023-10-05"
# 문자형 -> 날짜형
today <- "2003-10-05 13:02:37"
mode(today) # "character"
# 날짜변환
ctoday <- as.Date(today, '%Y-%m-%d %H:%M:%S')
mode(ctoday) # "numeric"
class(ctoday) # "Date"
ctoday # "2024-05-02"
ctoday # "2024-05-02"
# 문자형 -> 날짜형
today <- "2003-10-05 13:02:37"
mode(today) # "character"
# 날짜변환
ctoday <- as.Date(today, '%Y-%m-%d %H:%M:%S')
mode(ctoday) # "numeric"
class(ctoday) # "Date"
ctoday # "2024-05-02"
ctoday2 = strptime(today, '%Y-%m-%d %H:%M:%S')
ctoday2
# 문자형 -> 날짜형
today <- "2024-05-02 12:42:01"
mode(today) # "character"
# 날짜형으로 변환
ctoday <- as.Date(today, '%Y-%m-%d %H:%M:%S')
mode(ctoday) # "numeric"
class(ctoday) # "Date"
ctoday # "2024-05-02"
# 날짜형으로 변환 # as.Date()
ctoday <- as.Date(today, '%Y-%m-%d')
mode(ctoday) # "numeric"
class(ctoday) # "Date"
ctoday # "2024-05-02"
mode(ctoday2) # "numeric"
class(ctoday2)
# 다국어 정보 확인 ★
Sys.getlocale()
# 영어식 날짜(주식정보) -> 한국식 날짜 변환
edate <- '26-Apr-21' # 월 약자 : 2021-04-26
# 다국어 정보 확인 ★
Sys.getlocale()
# 다국어 정보 수정 : 영어권
Sys.setlocale(locale = 'English_USA')
kdate <- as.Date(edate, "%d-%b-%y")
kdate # "2021-04-26"
# 영어식 날짜(주식정보) -> 한국식 날짜 변환
edate <- '02-May-24' # 월 약자 : 2024-05-02
# 다국어 정보 확인 ★
Sys.getlocale()
# 다국어 정보 수정 : 영어권
Sys.setlocale(locale = 'English_USA')
kdate <- as.Date(edate, "%d-%b-%y")
kdate # "2021-04-26"
# 1) 기본함수 : 7개 base 패키지에서 제공하는 함수
help(mean) # 함수 도움말
args(mean) # 인수 보기
example(mean) # 예제 보기
# 2) 기본 데이터셋
data()
data(Nile) # 메모리 로딩
print(Nile)
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.10))
# 1) 기본함수 : 7개 base 패키지에서 제공하는 함수
help(mean) # 함수 도움말
args(mean) # 인수 보기
args(mean) # 인수 보기 ★★★★
# 실습2
x2 <- c(0:10, 50, NA)
xm2 <- mean(x2, na.rm = True) # na.rm
c(xm2, mean(x, trim = 0.10))
xm2 <- mean(x2, na.rm = TRUE) # na.rm
c(xm2, mean(x, trim = 0.10))
xm2 <- mean(x2, na.rm = FALSE) # na.rm
c(xm2, mean(x, trim = 0.10))
# 2) 기본 데이터셋
data()
# 실습2
x2 <- c(0:10, 50, NA)
xm2 <- mean(x2, na.rm = FALSE) # na.rm
c(xm2, mean(x, trim = 0.10))
# 6. 작업경로
getwd() # 작업경로 확인
setwd("C:/ITWILL/5_R_Statistics/data") # 작업경로 변경
# 2) 기본 데이터셋
data()
data(Nile) # 메모리 로딩
print(Nile)
setwd("C:\ITWILL\5_R\R_Statistics\data") # 작업경로 변경
# 6. 작업경로
getwd() # 작업경로 확인
setwd("C:/ITWILL/5_R/R_Statistics/data") # 작업경로 변경
emp <- read.csv("emp.csv")
emp
emp <- read.csv("emp.csv", encoding= 'utf-8')
emp
